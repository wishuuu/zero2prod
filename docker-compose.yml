version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: zero2prod-db
    profiles: ["db", "app"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: newsletter
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    build: .
    container_name: zero2prod-app
    profiles: ["app"]
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_ENVIRONMENT: production
    ports:
      - "8000:8000"
    volumes:
      - ${HOME}/zero2prod/configuration:/app/configuration:ro
    labels:
      - "traefik.http.routers.zero2prod.rule=Host(`zero2prod.wiszowaty.xyz`)"
      - "traefik.http.services.zero2prod.loadbalancer.server.port=8000"
      - "traefik.http.routers.zero2prod.entrypoints=websecure"
      - "traefik.http.routers.zero2prod.tls=true"
      - "traefik.http.routers.zero2prod.tls.certresolver=myresolver"
      - "traefik.docker.network=traefic_network"
    networks:
      - default
      - traefic_network

volumes:
  db_data:

networks:
  traefic_network:
    external: true
