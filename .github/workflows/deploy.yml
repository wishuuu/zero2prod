name: Build, Push and Deploy

on:
  workflow_run:
    workflows: ["Rust"]
    types:
      - completed

jobs:
  build_and_push:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'master' }}
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to private registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_URL }}/zero2prod/app:latest

  copy_compose_to_remote:
    needs: build_and_push
    name: Copy docker-compose to VPS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure deploy dir exists on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_PRIVATE_KEY }}
          script: mkdir -p ~/zero2prod

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/zero2prod/"

      - name: Copy deploy.sh to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_PRIVATE_KEY }}
          source: "scripts/deploy.sh"
          target: "~/zero2prod/"
          strip_components: 1

  deploy_to_remote:
    needs: copy_compose_to_remote
    name: SSH Deploy
    runs-on: ubuntu-latest
    steps:
      - name: SSH Deploy (run remote script)
        uses: appleboy/ssh-action@master
        env:
          REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          REGISTRY_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMPOSE_PROFILES: app
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_PRIVATE_KEY }}
          envs: REGISTRY_URL,REGISTRY_USERNAME,REGISTRY_PASSWORD,COMPOSE_PROFILES
          script: |
            set -euo pipefail
            bash ~/zero2prod/deploy.sh
